From 9faad04593129836415482561416ac4b8f7a4f24 Mon Sep 17 00:00:00 2001
From: Kenneth Giusti <kgiusti@apache.org>
Date: Thu, 18 Jul 2019 13:46:57 -0400
Subject: [PATCH] DO NOT MERGE: modified for MA processing benchmarking

---
 src/message.c     |  1 +
 src/router_node.c | 19 +++++++++++--------
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/src/message.c b/src/message.c
index ddc49bb7..c5a074e3 100644
--- a/src/message.c
+++ b/src/message.c
@@ -896,6 +896,7 @@ qd_message_t *qd_message()
     msg->send_complete = false;
     msg->tag_sent      = false;
     msg->is_fanout     = false;
+    msg->strip_annotations_in = false;
 
     msg->content = new_qd_message_content_t();
 
diff --git a/src/router_node.c b/src/router_node.c
index 5a2b593a..c8e91741 100644
--- a/src/router_node.c
+++ b/src/router_node.c
@@ -177,14 +177,15 @@ static int AMQP_writable_conn_handler(void *type_context, qd_connection_t *conn,
 }
 
 
-static qd_iterator_t *router_annotate_message(qd_router_t   *router,
-                                              qd_message_t  *msg,
-                                              qd_bitmask_t **link_exclusions,
-                                              uint32_t      *distance,
-                                              int           *ingress_index)
+qd_iterator_t *router_annotate_message(bool edge_mode,
+                                       qd_tracemask_t *tracemask,
+                                       qd_message_t  *msg,
+                                       qd_bitmask_t **link_exclusions,
+                                       uint32_t      *distance,
+                                       int           *ingress_index)
 {
     qd_iterator_t *ingress_iter = 0;
-    bool           edge_mode    = router->router_mode == QD_ROUTER_MODE_EDGE;
+    //bool           edge_mode    = router->router_mode == QD_ROUTER_MODE_EDGE;
 
     *link_exclusions = 0;
     *distance        = 0;
@@ -217,7 +218,7 @@ static qd_iterator_t *router_annotate_message(qd_router_t   *router,
                 // contain a one-bit for each link that leads to a neighbor router that
                 // the message has already passed through.
                 //
-                *link_exclusions = qd_tracemask_create(router->tracemask, trace, ingress_index);
+                *link_exclusions = qd_tracemask_create(tracemask, trace, ingress_index);
 
                 //
                 // Append this router's ID to the trace.
@@ -510,7 +511,9 @@ static bool AMQP_rx_handler(void* context, qd_link_t *link)
     uint32_t      distance;
     int           ingress_index = 0; // Default to _this_ router
 
-    qd_iterator_t *ingress_iter = router_annotate_message(router, msg, &link_exclusions, &distance, &ingress_index);
+    qd_iterator_t *ingress_iter = router_annotate_message(router->router_mode == QD_ROUTER_MODE_EDGE,
+                                                          router->tracemask,
+                                                          msg, &link_exclusions, &distance, &ingress_index);
 
     //
     // If this delivery has traveled further than the known radius of the network topology (plus 1),
-- 
2.17.2

