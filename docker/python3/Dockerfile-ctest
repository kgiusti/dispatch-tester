#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Downloads and installs apache proton and qpid dispatch on the latest
# version of Fedora and runs the dispatch unit tests in a Python 3
# environment
# Example:
# sudo docker build --tag dispatch-tester/ctest:1 --file Dockerfile-ctest \
#       [--build-arg proton_branch=<ref>]
#       [--build-arg dispatch_branch=<ref>] .
# sudo docker run -i -t --name ctest-router dispatch-tester/ctest:1

# Gets the latest Fedora from dockerhub
FROM fedora:27

LABEL maintainer=kgiusti@gmail.com

# Install all the required packages. Some in this list were picked off
#  from proton's INSTALL.md
#  (https://github.com/apache/qpid-proton/blob/master/INSTALL.md) and
#  the rest are from dispatch
#  (https://github.com/apache/qpid-dispatch/blob/master/README)

RUN dnf -y install \
    gcc \
    gcc-c++ \
    cmake \
    openssl-devel \
    cyrus-sasl-devel \
    cyrus-sasl-plain \
    cyrus-sasl-gssapi \
    cyrus-sasl-md5 \
    swig \
    python3 \
    python3-devel \
    python3-unittest2 \
    python3-tox \
    make \
    libuv \
    libuv-devel \
    libwebsockets-devel \
    wget \
    && dnf clean all -y

# Set the system default to python3
#
RUN alternatives --install /usr/bin/python python /usr/bin/python3 2 \
    && alternatives --install /usr/bin/unit2 unit2 /usr/bin/unit2-3 2

ARG proton_branch
ARG proton_url
ARG dispatch_branch
ARG dispatch_url
ENV proton_branch ${proton_branch:-master}
ENV proton_url ${proton_url:-https://github.com/apache/qpid-proton/archive}
ENV dispatch_branch ${dispatch_branch:-master}
ENV dispatch_url ${dispatch_url:-https://github.com/apache/qpid-dispatch/archive}

# Create a main directory for building proton and dispatch router
#
WORKDIR /main

# build and install proton from ${proton_branch} on ${proton_url}
#
RUN wget ${proton_url}/${proton_branch}.tar.gz \
    && tar -xvzf ${proton_branch}.tar.gz \
    && mkdir -p qpid-proton-${proton_branch}/BUILD \
    && cd qpid-proton-${proton_branch}/BUILD \
    && cmake .. -DSYSINSTALL_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/usr -DSYSINSTALL_PYTHON=ON \
                -DBUILD_BINDINGS=python \
    && make install \
    && cd /main \
    && rm -rf ${proton_branch}.tar.gz qpid-proton-${proton_branch}

# build and install dispatch from ${dispatch_branch} on ${dispatch_url}
#
RUN wget ${dispatch_url}/${dispatch_branch}.tar.gz \
    && tar -xvzf ${dispatch_branch}.tar.gz \
    && mkdir -p qpid-dispatch-${dispatch_branch}/BUILD \
    && cd qpid-dispatch-${dispatch_branch}/BUILD \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr \
    && make install \
    && cd /main \
    && rm -rf ${dispatch_branch}.tar.gz

CMD cd /main/qpid-dispatch-${dispatch_branch}/BUILD && ctest -VV
